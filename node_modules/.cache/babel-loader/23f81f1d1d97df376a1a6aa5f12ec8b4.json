{"ast":null,"code":"var _jsxFileName = \"/Users/User1/Development/code/Mod6/sh-challenge/src/Components/SearchBar.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.inputHandler = event => {\n      this.props.updateFilterState(event.target.value);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search by author name or book title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchTerm\",\n        onChange: this.inputHandler,\n        value: this.props.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/User1/Development/code/Mod6/sh-challenge/src/Components/SearchBar.jsx"],"names":["React","SearchBar","Component","inputHandler","event","props","updateFilterState","target","value","render","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAItCC,YAJsC,GAItBC,KAAD,IAAW;AACxB,WAAKC,KAAL,CAAWC,iBAAX,CAA6BF,KAAK,CAACG,MAAN,CAAaC,KAA1C;AAED,KAPqC;AAAA;;AAWtCC,EAAAA,MAAM,GAAG;AAGP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,QAAQ,EAAE,KAAKN,YAAzD;AAAuE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWK;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AArBqC;;AAyBxC,eAAeT,SAAf","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n\n  \n\n  inputHandler = (event) => {\n    this.props.updateFilterState(event.target.value)\n    \n  }\n \n\n\n  render() {\n  \n    \n    return (\n      <div className=\"search\">\n        <h3>Search by author name or book title</h3>\n        <input type=\"text\" className=\"searchTerm\" onChange={this.inputHandler} value={this.props.filter}/>\n      </div>\n\n    );\n  }\n\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}