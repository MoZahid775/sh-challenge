{"ast":null,"code":"var _jsxFileName = \"/Users/User1/Development/code/Mod6/sh-challenge/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header'; // import SearchBar from './Components/SearchBar';\n\nimport QuotesContainer from './Components/QuotesContainer'; // import AddQuote from './Components/AddQuote';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apods: [],\n      filter: \"\",\n      favoritesFilterActive: false\n    };\n\n    this.updateLikesOnState = updatedObj => {\n      let copyOfQuotes = this.state.quotes.map(quoteObj => {\n        if (quoteObj.id === updatedObj.id) {\n          return updatedObj;\n        } else {\n          return quoteObj;\n        }\n      });\n      this.setState({\n        quotes: copyOfQuotes\n      });\n    };\n\n    this.favoritesStateToggle = () => {\n      this.setState({\n        favoritesFilterActive: !this.state.favoritesFilterActive\n      });\n    };\n\n    this.updateFavoriteOnState = updatedObj => {\n      let anotherCopyOfQuotes = this.state.quotes.map(quoteObj => {\n        if (quoteObj.id == updatedObj.id) {\n          return updatedObj;\n        } else {\n          return quoteObj;\n        }\n      });\n      this.setState({\n        quotes: anotherCopyOfQuotes\n      });\n    };\n  }\n\n  componentDidMount() {\n    let api_key = \"qd4YY6qHiCDOq4bC4O558YvEec1N9jWP0ULlq1yz\";\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${api_key}&count=10`).then(res => res.json()).then(astroArr => {\n      console.log(astroArr);\n      this.setState({\n        apods: astroArr\n      });\n    });\n  } // addQuoteToEndOfState = (newQuote) => {\n  //   let newArr = [...this.state.quotes, newQuote]\n  //   this.setState({\n  //     quotes: newArr\n  //   })\n  // }\n  //the below function deletes a card off the page and off the backend\n  // deleteQuote = (id) => {\n  //   fetch(`http://localhost:4000/quotes/${id}`, {\n  //     method: \"DELETE\",\n  //   })\n  //     .then(res => res.json())\n  //     .then(() => {\n  //      let arrayWithoutDeleted = this.state.quotes.filter((quoteObj) => { \n  //        return quoteObj.id !== id\n  //            })\n  //            this.setState({      \n  //                quotes: arrayWithoutDeleted\n  //            })    \n  //     })\n  // }\n  //The Below funtion updates the filter in the state above\n  // updateFilterState= (value) => {\n  //    this.setState({\n  //      filter: value\n  //    })\n  // }\n  //The Below function updates the likes on the fron end\n\n\n  render() {\n    let arrayOfApods = this.state.apods; // let newArrayofQuotes = arrayOfQuotes.filter((arrayObj) => { \n    //   if(this.state.favoritesFilterActive){\n    //   return (arrayObj.favorite == true)\n    //   } else {\n    //   return (arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase()))}\n    // })\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.favoritesStateToggle,\n        children: [\"Filter by Favorites \", this.state.favoritesFilterActive ? \"ON\" : \"OFF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(QuotesContainer, {\n        arrayOfApods: arrayOfApods,\n        deleteQuote: this.deleteQuote,\n        updateLikesOnState: this.updateLikesOnState,\n        updateFavoriteOnState: this.updateFavoriteOnState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/User1/Development/code/Mod6/sh-challenge/src/App.js"],"names":["React","Component","Header","QuotesContainer","App","state","apods","filter","favoritesFilterActive","updateLikesOnState","updatedObj","copyOfQuotes","quotes","map","quoteObj","id","setState","favoritesStateToggle","updateFavoriteOnState","anotherCopyOfQuotes","componentDidMount","api_key","fetch","then","res","json","astroArr","console","log","render","arrayOfApods","deleteQuote"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Components/Header';\n// import SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\n// import AddQuote from './Components/AddQuote';\n\n\nexport default class App extends Component {\n\n  state = {\n    apods: [],\n    filter: \"\",\n    favoritesFilterActive: false \n  }\n\n  componentDidMount(){\n    let api_key = \"qd4YY6qHiCDOq4bC4O558YvEec1N9jWP0ULlq1yz\"\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${api_key}&count=10`)\n      .then(res => res.json())\n      .then((astroArr) => {\n        console.log(astroArr)\n        this.setState({\n          apods: astroArr\n        })\n      })\n  }\n\n  // addQuoteToEndOfState = (newQuote) => {\n  //   let newArr = [...this.state.quotes, newQuote]\n  //   this.setState({\n  //     quotes: newArr\n  //   })\n  // }\n\n  //the below function deletes a card off the page and off the backend\n  // deleteQuote = (id) => {\n  //   fetch(`http://localhost:4000/quotes/${id}`, {\n  //     method: \"DELETE\",\n  //   })\n  //     .then(res => res.json())\n  //     .then(() => {\n       \n  //      let arrayWithoutDeleted = this.state.quotes.filter((quoteObj) => { \n  //        return quoteObj.id !== id\n  //            })\n  //            this.setState({      \n  //                quotes: arrayWithoutDeleted\n\n  //            })    \n  //     })\n  // }\n\n  //The Below funtion updates the filter in the state above\n  \n  // updateFilterState= (value) => {\n  //    this.setState({\n  //      filter: value\n  //    })\n  // }\n  \n  //The Below function updates the likes on the fron end\n  updateLikesOnState =(updatedObj) =>{\n    let copyOfQuotes = this.state.quotes.map((quoteObj) =>{\n      if(quoteObj.id === updatedObj.id){\n         return updatedObj  \n      } else {\n      return quoteObj\n      }     \n    })\n    this.setState({\n    quotes: copyOfQuotes\n    })\n  }\n\n  //The Below function update the toggle for the favorites state above\n  favoritesStateToggle = () => {\n  this.setState({\n    favoritesFilterActive: !this.state.favoritesFilterActive},\n    )\n  }\n\n  updateFavoriteOnState =(updatedObj) => {\n   let anotherCopyOfQuotes = this.state.quotes.map((quoteObj) =>{\n    if (quoteObj.id == updatedObj.id){\n    return   updatedObj\n    }else{\n    return quoteObj}\n    })\n    this.setState({\n    quotes: anotherCopyOfQuotes\n\n    })\n  }\n\n\n\n\n\n  render() {\n   \n    let arrayOfApods = this.state.apods\n    // let newArrayofQuotes = arrayOfQuotes.filter((arrayObj) => { \n    //   if(this.state.favoritesFilterActive){\n    //   return (arrayObj.favorite == true)\n    //   } else {\n    //   return (arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase()))}\n    // })\n    \n\n\n\n    return (\n      <div>\n      <Header />\n      {/* <SearchBar filter={this.state.filter} updateFilterState={this.updateFilterState} /> */}\n      {/* <AddQuote addQuoteToEndOfState={this.addQuoteToEndOfState} /> */}\n      <button onClick={this.favoritesStateToggle}>Filter by Favorites {this.state.favoritesFilterActive? \"ON\" : \"OFF\" }</button>\n      <QuotesContainer arrayOfApods={arrayOfApods} deleteQuote={this.deleteQuote} updateLikesOnState={this.updateLikesOnState} updateFavoriteOnState={this.updateFavoriteOnState}/>  \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}