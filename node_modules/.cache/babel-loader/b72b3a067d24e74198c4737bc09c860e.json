{"ast":null,"code":"var _jsxFileName = \"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\nimport AddQuote from './Components/AddQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: [],\n      filter: \"\"\n    };\n\n    this.addQuoteToEndOfState = newQuote => {\n      let newArr = [...this.state.quotes, newQuote];\n      this.setState({\n        quotes: newArr\n      });\n    };\n\n    this.deleteQuote = id => {\n      fetch(`http://localhost:4000/quotes/${id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        let arrayWithoutDeleted = this.state.quotes.filter(quoteObj => {\n          return quoteObj.id !== id;\n        });\n        this.setState({\n          quotes: arrayWithoutDeleted\n        });\n      });\n    };\n\n    this.updateFilterState = value => {\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.updateLikesOnState = updatedObj => {\n      let copyOfQuotes = this.state.quotes.map(quoteObj => {\n        if (quoteObj.id === updatedObj.id) {\n          return updatedObj;\n        } else {\n          return quoteObj;\n        }\n      });\n      this.setState({\n        quotes: copyOfQuotes\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/quotes\").then(res => res.json()).then(quotesArr => {\n      // console.log(quotesArr)\n      this.setState({\n        quotes: quotesArr\n      });\n    });\n  }\n\n  render() {\n    let arrayOfQuotes = this.state.quotes; //Line 63 and 64 filter by source and author\n\n    let newArrayofQuotes = arrayOfQuotes.filter(arrayObj => {\n      return arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        filter: this.state.filter,\n        updateFilterState: this.updateFilterState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddQuote, {\n        addQuoteToEndOfState: this.addQuoteToEndOfState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(QuotesContainer, {\n        arrayOfQuotes: newArrayofQuotes,\n        deleteQuote: this.deleteQuote,\n        updateLikesOnState: this.updateLikesOnState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/App.js"],"names":["React","Component","Header","SearchBar","QuotesContainer","AddQuote","App","state","quotes","filter","addQuoteToEndOfState","newQuote","newArr","setState","deleteQuote","id","fetch","method","then","res","json","arrayWithoutDeleted","quoteObj","updateFilterState","value","updateLikesOnState","updatedObj","copyOfQuotes","map","componentDidMount","quotesArr","render","arrayOfQuotes","newArrayofQuotes","arrayObj","author","toLowerCase","includes","source"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Components/Header';\nimport SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\nimport AddQuote from './Components/AddQuote';\n\n\nexport default class App extends Component {\n\n  state = {\n    quotes: [],\n    filter: \"\"\n  }\n\n  componentDidMount(){\n    fetch(\"http://localhost:4000/quotes\")\n      .then(res => res.json())\n      .then((quotesArr) => {\n        // console.log(quotesArr)\n        this.setState({\n          quotes: quotesArr\n        })\n      })\n  }\n\n  addQuoteToEndOfState = (newQuote) => {\n    let newArr = [...this.state.quotes, newQuote]\n    this.setState({\n      quotes: newArr\n    })\n  }\n\n  //the below function deletes a card off the page and off the backend\n  deleteQuote = (id) => {\n    fetch(`http://localhost:4000/quotes/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(res => res.json())\n      .then(() => {\n       \n       let arrayWithoutDeleted = this.state.quotes.filter((quoteObj) => { \n         return quoteObj.id !== id\n             })\n             this.setState({      \n                 quotes: arrayWithoutDeleted\n\n             })    \n      })\n  }\n\n  //The Below funtion updates the filter in the state above\n  \n  updateFilterState= (value) => {\n     this.setState({\n       filter: value\n     })\n  }\n  \n  //The Below function updates the likes on the fron end\n  updateLikesOnState =(updatedObj) =>{\n    let copyOfQuotes = this.state.quotes.map((quoteObj) =>{\n      if(quoteObj.id === updatedObj.id){\n         return updatedObj  \n      } else {\n      return quoteObj\n      }     \n    })\n    this.setState({\n    quotes: copyOfQuotes\n    })\n  }\n\n\n  render() {\n    let arrayOfQuotes = this.state.quotes\n    //Line 63 and 64 filter by source and author\n    let newArrayofQuotes = arrayOfQuotes.filter((arrayObj) => { \n    return (arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase()))\n    })\n    \n\n\n\n    return (\n      <div>\n      <Header />\n      <SearchBar filter={this.state.filter} updateFilterState={this.updateFilterState} />\n      <AddQuote addQuoteToEndOfState={this.addQuoteToEndOfState} />\n      <QuotesContainer arrayOfQuotes={newArrayofQuotes} deleteQuote={this.deleteQuote} updateLikesOnState={this.updateLikesOnState}/>  \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}