{"ast":null,"code":"var _jsxFileName = \"/Users/User1/Development/code/Mod6/sh-challenge/src/Components/Apod.jsx\";\nimport React, { Component } from 'react';\nimport { Card, CardContent, Icon, Image } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Apod extends Component {\n  // state = {       \n  //   showingFront : true,\n  //   favorite: false\n  // }\n  // toggleShowingFront = () => {\n  //   this.setState({\n  //     showingFront: !this.state.showingFront\n  //   })\n  // }\n  // likeIncreaser = () => {\n  //   this.props.quote.likes += 1\n  //   let data = {likes: this.props.quote.likes}\n  //   fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(data),\n  //     })\n  //     .then((r) => r.json())\n  //     .then((quoteObj) => this.props.updateLikesOnState(quoteObj));\n  // }\n  // deleteHandler = () => {\n  //  this.props.deleteQuote(this.props.quote.id)\n  // }\n  // toggleFavorite = () => {\n  //     this.setState({\n  //        favorite: !this.state.favorite\n  //     },\n  //          () => {\n  //          let data = {favorite: this.state.favorite}\n  //          fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n  //          method: \"PATCH\",\n  //          headers: {\n  //          \"Content-Type\": \"application/json\",\n  //          },\n  //          body: JSON.stringify(data),\n  //          })\n  //          .then((r) => r.json())\n  //          .then((quoteObj) => this.props.updateFavoriteOnState(quoteObj));\n  //       }\n  //     )   \n  // }\n  render() {\n    console.log(this.props.apod);\n    let {\n      date,\n      explanation,\n      hdurl,\n      title\n    } = this.props.apod;\n    console.log(date);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"apod_card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"quote\",\n          children: [\"\\\"\", title, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        className: \"card_back\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: hdurl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n{\n  /* // <div onClick={this.toggleShowingFront}>\n  // {this.state.showingFront?\n  //     <Card.Content>\n  //       <Card.Header className=\"quote\">\"{title}\"</Card.Header>\n  //     </Card.Content>\n  // :\n  //     <Card.Content className=\"card_back\">\n  //       <Image className=\"author_img\" src={hdurl} \n  //       // wrapped ui={false} alt={author}\n  //       ></Image>\n  //       <div className=\"author_info\">\n  //         <Card.Header>{explanation}</Card.Header>\n  //         {/* <Card.Description><em>{source}</em></Card.Description> */\n} //       </div>\n//     </Card.Content>\n// }\n// </div> */}\n// <Card.Description className=\"likes\">\n//   <button onClick={this.likeIncreaser}>♡</button>\n//   {likes}\n//   <button onClick={this.deleteHandler}>delete</button>\n//   {this.state.favorite ? <button onClick={this.toggleFavorite}>★</button> :<button onClick={this.toggleFavorite} >☆</button>}\n// </Card.Description>","map":{"version":3,"sources":["/Users/User1/Development/code/Mod6/sh-challenge/src/Components/Apod.jsx"],"names":["React","Component","Card","CardContent","Icon","Image","Apod","render","console","log","props","apod","date","explanation","hdurl","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,IAA5B,EAAkCC,KAAlC,QAA+C,mBAA/C;;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC1C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGAM,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;AAEA,QAAI;AAACC,MAAAA,IAAD;AAAOC,MAAAA,WAAP;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA;AAA3B,QAAoC,KAAKL,KAAL,CAAWC,IAAnD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACE,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACG,QAAC,IAAD,CAAM,OAAN;AAAA,+BACG,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,SAAS,EAAC,OAAvB;AAAA,2BAAiCG,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADH,eAKG,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,SAAS,EAAC,WAAxB;AAAA,+BACG,QAAC,KAAD;AAAO,UAAA,GAAG,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA7EqC;AAiFxC;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAA6E,C,CACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardContent, Icon, Image } from 'semantic-ui-react'\n\nexport default class Apod extends Component {\n  // state = {       \n  //   showingFront : true,\n  //   favorite: false\n  // }\n\n  // toggleShowingFront = () => {\n  //   this.setState({\n  //     showingFront: !this.state.showingFront\n  //   })\n  // }\n\n  // likeIncreaser = () => {\n  //   this.props.quote.likes += 1\n  //   let data = {likes: this.props.quote.likes}\n  //   fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(data),\n  //     })\n  //     .then((r) => r.json())\n  //     .then((quoteObj) => this.props.updateLikesOnState(quoteObj));\n  // }\n\n\n  // deleteHandler = () => {\n  //  this.props.deleteQuote(this.props.quote.id)\n  // }\n\n  // toggleFavorite = () => {\n  //     this.setState({\n  //        favorite: !this.state.favorite\n  //     },\n\n  //          () => {\n                 \n  //          let data = {favorite: this.state.favorite}\n  //          fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n  //          method: \"PATCH\",\n  //          headers: {\n  //          \"Content-Type\": \"application/json\",\n  //          },\n  //          body: JSON.stringify(data),\n  //          })\n  //          .then((r) => r.json())\n  //          .then((quoteObj) => this.props.updateFavoriteOnState(quoteObj));\n           \n  //       }\n  //     )   \n    \n  // }\n\n  \n  render() {\n      console.log(this.props.apod)\n      \n      let {date, explanation, hdurl, title} = this.props.apod\n      console.log(date)\n        return (\n          <Card className=\"apod_card\">\n             <Card.Content>\n                <Card.Header className=\"quote\">\"{title}\"</Card.Header>\n             </Card.Content>\n\n             <Card.Content className=\"card_back\">\n                <Image src={hdurl}></Image>\n\n\n\n\n\n             </Card.Content>\n\n          </Card>    \n       )\n      }\n      \n      \n    }\n    {/* // <div onClick={this.toggleShowingFront}>\n    // {this.state.showingFront?\n    //     <Card.Content>\n    //       <Card.Header className=\"quote\">\"{title}\"</Card.Header>\n    //     </Card.Content>\n    // :\n    //     <Card.Content className=\"card_back\">\n    //       <Image className=\"author_img\" src={hdurl} \n    //       // wrapped ui={false} alt={author}\n    //       ></Image>\n    //       <div className=\"author_info\">\n    //         <Card.Header>{explanation}</Card.Header>\n    //         {/* <Card.Description><em>{source}</em></Card.Description> */}\n    //       </div>\n    //     </Card.Content>\n    // }\n    // </div> */}\n    // <Card.Description className=\"likes\">\n    //   <button onClick={this.likeIncreaser}>♡</button>\n    //   {likes}\n    //   <button onClick={this.deleteHandler}>delete</button>\n    //   {this.state.favorite ? <button onClick={this.toggleFavorite}>★</button> :<button onClick={this.toggleFavorite} >☆</button>}\n    // </Card.Description>\n            "]},"metadata":{},"sourceType":"module"}