{"ast":null,"code":"var _jsxFileName = \"/Users/User1/Development/code/Mod6/sh-challenge/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\nimport AddQuote from './Components/AddQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: [],\n      filter: \"\",\n      favoritesFilterActive: false\n    };\n\n    this.deleteQuote = id => {\n      fetch(`http://localhost:4000/quotes/${id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        let arrayWithoutDeleted = this.state.quotes.filter(quoteObj => {\n          return quoteObj.id !== id;\n        });\n        this.setState({\n          quotes: arrayWithoutDeleted\n        });\n      });\n    };\n\n    this.updateFilterState = value => {\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.updateLikesOnState = updatedObj => {\n      let copyOfQuotes = this.state.quotes.map(quoteObj => {\n        if (quoteObj.id === updatedObj.id) {\n          return updatedObj;\n        } else {\n          return quoteObj;\n        }\n      });\n      this.setState({\n        quotes: copyOfQuotes\n      });\n    };\n\n    this.favoritesStateToggle = () => {\n      this.setState({\n        favoritesFilterActive: !this.state.favoritesFilterActive\n      });\n    };\n\n    this.updateFavoriteOnState = updatedObj => {\n      let anotherCopyOfQuotes = this.state.quotes.map(quoteObj => {\n        if (quoteObj.id == updatedObj.id) {\n          return updatedObj;\n        } else {\n          return quoteObj;\n        }\n      });\n      this.setState({\n        quotes: anotherCopyOfQuotes\n      });\n    };\n  }\n\n  componentDidMount() {\n    let api_key = \"qd4YY6qHiCDOq4bC4O558YvEec1N9jWP0ULlq1yz\";\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${api_key}&count=10`).then(res => res.json()).then(astroArr => {\n      console.log(astroArr);\n      this.setState({\n        apod: astroArr\n      });\n    });\n  } // addQuoteToEndOfState = (newQuote) => {\n  //   let newArr = [...this.state.quotes, newQuote]\n  //   this.setState({\n  //     quotes: newArr\n  //   })\n  // }\n  //the below function deletes a card off the page and off the backend\n\n\n  render() {\n    let arrayOfQuotes = this.state.quotes;\n    let newArrayofQuotes = arrayOfQuotes.filter(arrayObj => {\n      if (this.state.favoritesFilterActive) {\n        return arrayObj.favorite == true;\n      } else {\n        return arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase());\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        filter: this.state.filter,\n        updateFilterState: this.updateFilterState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddQuote, {\n        addQuoteToEndOfState: this.addQuoteToEndOfState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.favoritesStateToggle,\n        children: [\"Filter by Favorites \", this.state.favoritesFilterActive ? \"ON\" : \"OFF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(QuotesContainer, {\n        arrayOfQuotes: newArrayofQuotes,\n        deleteQuote: this.deleteQuote,\n        updateLikesOnState: this.updateLikesOnState,\n        updateFavoriteOnState: this.updateFavoriteOnState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/User1/Development/code/Mod6/sh-challenge/src/App.js"],"names":["React","Component","Header","SearchBar","QuotesContainer","AddQuote","App","state","quotes","filter","favoritesFilterActive","deleteQuote","id","fetch","method","then","res","json","arrayWithoutDeleted","quoteObj","setState","updateFilterState","value","updateLikesOnState","updatedObj","copyOfQuotes","map","favoritesStateToggle","updateFavoriteOnState","anotherCopyOfQuotes","componentDidMount","api_key","astroArr","console","log","apod","render","arrayOfQuotes","newArrayofQuotes","arrayObj","favorite","author","toLowerCase","includes","source","addQuoteToEndOfState"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Components/Header';\nimport SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\nimport AddQuote from './Components/AddQuote';\n\n\nexport default class App extends Component {\n\n  state = {\n    quotes: [],\n    filter: \"\",\n    favoritesFilterActive: false \n  }\n\n  componentDidMount(){\n    let api_key = \"qd4YY6qHiCDOq4bC4O558YvEec1N9jWP0ULlq1yz\"\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${api_key}&count=10`)\n      .then(res => res.json())\n      .then((astroArr) => {\n        console.log(astroArr)\n        this.setState({\n          apod: astroArr\n        })\n      })\n  }\n\n  // addQuoteToEndOfState = (newQuote) => {\n  //   let newArr = [...this.state.quotes, newQuote]\n  //   this.setState({\n  //     quotes: newArr\n  //   })\n  // }\n\n  //the below function deletes a card off the page and off the backend\n  deleteQuote = (id) => {\n    fetch(`http://localhost:4000/quotes/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(res => res.json())\n      .then(() => {\n       \n       let arrayWithoutDeleted = this.state.quotes.filter((quoteObj) => { \n         return quoteObj.id !== id\n             })\n             this.setState({      \n                 quotes: arrayWithoutDeleted\n\n             })    \n      })\n  }\n\n  //The Below funtion updates the filter in the state above\n  \n  updateFilterState= (value) => {\n     this.setState({\n       filter: value\n     })\n  }\n  \n  //The Below function updates the likes on the fron end\n  updateLikesOnState =(updatedObj) =>{\n    let copyOfQuotes = this.state.quotes.map((quoteObj) =>{\n      if(quoteObj.id === updatedObj.id){\n         return updatedObj  \n      } else {\n      return quoteObj\n      }     \n    })\n    this.setState({\n    quotes: copyOfQuotes\n    })\n  }\n\n  //The Below function update the toggle for the favorites state above\n  favoritesStateToggle = () => {\n  this.setState({\n    favoritesFilterActive: !this.state.favoritesFilterActive},\n    )\n  }\n\n  updateFavoriteOnState =(updatedObj) => {\n   let anotherCopyOfQuotes = this.state.quotes.map((quoteObj) =>{\n    if (quoteObj.id == updatedObj.id){\n    return   updatedObj\n    }else{\n    return quoteObj}\n    })\n    this.setState({\n    quotes: anotherCopyOfQuotes\n\n    })\n  }\n\n\n\n\n\n  render() {\n   \n    let arrayOfQuotes = this.state.quotes\n    let newArrayofQuotes = arrayOfQuotes.filter((arrayObj) => { \n      if(this.state.favoritesFilterActive){\n      return (arrayObj.favorite == true)\n      } else {\n      return (arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase()))}\n    })\n    \n\n\n\n    return (\n      <div>\n      <Header />\n      <SearchBar filter={this.state.filter} updateFilterState={this.updateFilterState} />\n      <AddQuote addQuoteToEndOfState={this.addQuoteToEndOfState} />\n      <button onClick={this.favoritesStateToggle}>Filter by Favorites {this.state.favoritesFilterActive? \"ON\" : \"OFF\" }</button>\n      <QuotesContainer arrayOfQuotes={newArrayofQuotes} deleteQuote={this.deleteQuote} updateLikesOnState={this.updateLikesOnState} updateFavoriteOnState={this.updateFavoriteOnState}/>  \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}