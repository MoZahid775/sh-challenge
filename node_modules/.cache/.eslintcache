[{"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/index.js":"1","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/App.js":"2","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/reportWebVitals.js":"3","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/Header.jsx":"4","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/SearchBar.jsx":"5","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/QuotesContainer.jsx":"6","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/Quote.jsx":"7","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/AddQuote.jsx":"8"},{"size":500,"mtime":1622224077619,"results":"9","hashOfConfig":"10"},{"size":3183,"mtime":1622725340027,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1622224077619,"results":"12","hashOfConfig":"10"},{"size":151,"mtime":1622439360644,"results":"13","hashOfConfig":"10"},{"size":451,"mtime":1622661961327,"results":"14","hashOfConfig":"10"},{"size":578,"mtime":1622724653455,"results":"15","hashOfConfig":"10"},{"size":2676,"mtime":1622724713316,"results":"16","hashOfConfig":"10"},{"size":2484,"mtime":1622737961236,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ehuchy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/index.js",[],["38","39"],"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/App.js",["40","41"],"\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Components/Header';\nimport SearchBar from './Components/SearchBar';\nimport QuotesContainer from './Components/QuotesContainer';\nimport AddQuote from './Components/AddQuote';\n\n\nexport default class App extends Component {\n\n  state = {\n    quotes: [],\n    filter: \"\",\n    favoritesFilterActive: false \n  }\n\n  componentDidMount(){\n    fetch(\"http://localhost:4000/quotes\")\n      .then(res => res.json())\n      .then((quotesArr) => {\n        // console.log(quotesArr)\n        this.setState({\n          quotes: quotesArr\n        })\n      })\n  }\n\n  addQuoteToEndOfState = (newQuote) => {\n    let newArr = [...this.state.quotes, newQuote]\n    this.setState({\n      quotes: newArr\n    })\n  }\n\n  //the below function deletes a card off the page and off the backend\n  deleteQuote = (id) => {\n    fetch(`http://localhost:4000/quotes/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(res => res.json())\n      .then(() => {\n       \n       let arrayWithoutDeleted = this.state.quotes.filter((quoteObj) => { \n         return quoteObj.id !== id\n             })\n             this.setState({      \n                 quotes: arrayWithoutDeleted\n\n             })    \n      })\n  }\n\n  //The Below funtion updates the filter in the state above\n  \n  updateFilterState= (value) => {\n     this.setState({\n       filter: value\n     })\n  }\n  \n  //The Below function updates the likes on the fron end\n  updateLikesOnState =(updatedObj) =>{\n    let copyOfQuotes = this.state.quotes.map((quoteObj) =>{\n      if(quoteObj.id === updatedObj.id){\n         return updatedObj  \n      } else {\n      return quoteObj\n      }     \n    })\n    this.setState({\n    quotes: copyOfQuotes\n    })\n  }\n\n  //The Below function update the toggle for the favorites state above\n  favoritesStateToggle = () => {\n  this.setState({\n    favoritesFilterActive: !this.state.favoritesFilterActive},\n    )\n  }\n\n  updateFavoriteOnState =(updatedObj) => {\n   let anotherCopyOfQuotes = this.state.quotes.map((quoteObj) =>{\n    if (quoteObj.id == updatedObj.id){\n    return   updatedObj\n    }else{\n    return quoteObj}\n    })\n    this.setState({\n    quotes: anotherCopyOfQuotes\n\n    })\n  }\n\n\n\n\n\n  render() {\n   \n    let arrayOfQuotes = this.state.quotes\n    let newArrayofQuotes = arrayOfQuotes.filter((arrayObj) => { \n      if(this.state.favoritesFilterActive){\n      return (arrayObj.favorite == true)\n      } else {\n      return (arrayObj.author.toLowerCase().includes(this.state.filter.toLowerCase()) || arrayObj.source.toLowerCase().includes(this.state.filter.toLowerCase()))}\n    })\n    \n\n\n\n    return (\n      <div>\n      <Header />\n      <SearchBar filter={this.state.filter} updateFilterState={this.updateFilterState} />\n      <AddQuote addQuoteToEndOfState={this.addQuoteToEndOfState} />\n      <button onClick={this.favoritesStateToggle}>Filter by Favorites {this.state.favoritesFilterActive? \"ON\" : \"OFF\" }</button>\n      <QuotesContainer arrayOfQuotes={newArrayofQuotes} deleteQuote={this.deleteQuote} updateLikesOnState={this.updateLikesOnState} updateFavoriteOnState={this.updateFavoriteOnState}/>  \n      </div>\n    )\n  }\n}\n","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/reportWebVitals.js",[],"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/Header.jsx",[],"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/SearchBar.jsx",[],"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/QuotesContainer.jsx",[],"/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/Quote.jsx",["42","43"],"import React, { Component } from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\nexport default class Quote extends Component {\n  state = {       \n    showingFront : true,\n    favorite: false\n  }\n\n  toggleShowingFront = () => {\n    this.setState({\n      showingFront: !this.state.showingFront\n    })\n  }\n\n  likeIncreaser = () => {\n    this.props.quote.likes += 1\n    let data = {likes: this.props.quote.likes}\n    fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n      method: \"PATCH\",\n      headers: {\n      \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n      })\n      .then((r) => r.json())\n      .then((quoteObj) => this.props.updateLikesOnState(quoteObj));\n  }\n\n\n  deleteHandler = () => {\n   this.props.deleteQuote(this.props.quote.id)\n  }\n\n  toggleFavorite = () => {\n      this.setState({\n         favorite: !this.state.favorite\n      },\n\n           () => {\n                 \n           let data = {favorite: this.state.favorite}\n           fetch(`http://localhost:4000/quotes/${this.props.quote.id}`, {\n           method: \"PATCH\",\n           headers: {\n           \"Content-Type\": \"application/json\",\n           },\n           body: JSON.stringify(data),\n           })\n           .then((r) => r.json())\n           .then((quoteObj) => this.props.updateFavoriteOnState(quoteObj));\n           \n        }\n      )   \n    \n  }\n\n\n\n    render() {\n      \n      let {author, image, quote, source, likes, favorite} = this.props.quote\n        return (\n          <Card className=\"quote_card\">\n            <div onClick={this.toggleShowingFront}>\n            {this.state.showingFront?\n                <Card.Content>\n                  <Card.Header className=\"quote\">\"{quote}\"</Card.Header>\n                </Card.Content>\n            :\n                <Card.Content className=\"card_back\">\n                  <Image className=\"author_img\" src={image} wrapped ui={false} alt={author}></Image>\n                  <div className=\"author_info\">\n                    <Card.Header>{author}</Card.Header>\n                    <Card.Description><em>{source}</em></Card.Description>\n                  </div>\n                </Card.Content>\n            }\n            </div>\n            \n            <Card.Description className=\"likes\">\n              <button onClick={this.likeIncreaser}>♡</button>\n              {likes}\n              <button onClick={this.deleteHandler}>delete</button>\n              {this.state.favorite ? <button onClick={this.toggleFavorite}>★</button> :<button onClick={this.toggleFavorite} >☆</button>}\n            </Card.Description>\n\n          </Card>\n            \n            \n       \n    \n       )\n    }\n\n\n}\n","/Users/User1/Development/code/Mod2/phase-2-project/phase-2-project/project-2/src/Components/AddQuote.jsx",["44"],"import React from 'react';\nimport { Button, Form, Card } from 'semantic-ui-react'\n\nclass AddQuote extends React.Component {\n\n  state = {\n    author: \"\",\n    image: \"\",\n    quote: \"\",\n    source: \"\",\n    likes: 0,\n    favorite: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    let formattedObj = {\n      author: this.state.author,\n      image: this.state.image,\n      quote: this.state.quote,\n      source: this.state.source,\n      likes: 0,\n      favorite: false\n    }\n\n    fetch(`http://localhost:4000/quotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\" : \"Application/json\"\n      },\n      body: JSON.stringify(formattedObj)\n    })\n    .then(res => res.json())\n    .then(newlyAddedQuote => {\n      this.props.addQuoteToEndOfState(newlyAddedQuote)\n      this.setState({\n        author: \"\",\n        image: \"\",\n        quote: \"\",\n        source: \"\"\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Card className=\"addForm\">\n        <h3>Add your own quote to the collection!</h3>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Author  </label>\n            <input \n              id=\"author\"\n              name=\"author\"\n              onChange={this.handleChange}\n              value={this.state.author} \n              placeholder='Author Name' \n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Quote  </label>\n            <input \n              id=\"quote\" \n              name=\"quote\" \n              onChange={this.handleChange}\n              value={this.state.quote} \n              placeholder='Type Quote Here' \n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Source  </label>\n            <input \n              id=\"source\" \n              name=\"source\" \n              onChange={this.handleChange}\n              value={this.state.source} \n              placeholder=\"Book Title\" \n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Author Photo  </label>\n            <input \n              id=\"image\" \n              name=\"image\" \n              onChange={this.handleChange}\n              value={this.state.image} \n              placeholder=\"Image URL\"\n            />\n          </Form.Field>\n          <Form.Button type='submit'>Submit</Form.Button>\n        </Form>\n      </Card>\n    );\n  }\n}\n  \nexport default AddQuote;\n  ",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":88,"column":21,"nodeType":"51","messageId":"52","endLine":88,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":108,"column":33,"nodeType":"51","messageId":"52","endLine":108,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},{"ruleId":"53","severity":1,"message":"57","line":62,"column":49,"nodeType":"55","messageId":"56","endLine":62,"endColumn":57},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'favorite' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]